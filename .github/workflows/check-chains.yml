name: Check chain URLs

on:
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at 00:00 UTC
  push:
    branches: [ check-script ]

jobs:
  check-chains:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./scripts
        run: npm install

      - name: Run chain check script using ts-node
        working-directory: ./scripts
        run: node --loader ts-node/esm checkChains.mts

      - name: Debug - List files
        run: |
          echo "Root directory:"
          ls -la
          echo "Scripts directory:"
          ls -la scripts/

      - name: Check if report exists
        id: check_report
        run: |
          echo "Checking for report in root:"
          if [ -f report ]; then
            echo "Report exists in root"
            echo "exists=true" >> $GITHUB_OUTPUT
          elif [ -f scripts/report ]; then
            echo "Report exists in scripts directory"
            echo "exists=true" >> $GITHUB_OUTPUT
            cp scripts/report report
          else
            echo "Report not found in either location"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Read report content
        id: get_report
        if: ${{ steps.check_report.outputs.exists == 'true' }}
        run: |
          echo "Reading report content:"
          cat report
          echo "report<<EOF" >> $GITHUB_OUTPUT
          cat report >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Issue if report found
        if: ${{ steps.check_report.outputs.exists == 'true' }}
        uses: actions/github-script@v6
        with:
          script: |
            console.log('Creating issue with report:', process.env.REPORT);
            const now = new Date();
            const day = String(now.getDate()).padStart(2, '0');
            const month = String(now.getMonth() + 1).padStart(2, '0');
            const year = now.getFullYear();
            const formattedDate = `${day}-${month}-${year}`;
            const report = process.env.REPORT;
            const issueTitle = `Chain Issues Report (${formattedDate})`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: report,
            });
            console.log('Issue created successfully');
        env:
          REPORT: ${{ steps.get_report.outputs.report }}
